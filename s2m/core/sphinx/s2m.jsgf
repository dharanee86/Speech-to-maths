#JSGF V0;

grammar speech-to-math-v0;

public <expression> = alpha | yankee | entre parenthèse <expressionalias> | delta | zulu | <number> | charlie | <unaryoperator-operator> <expressionalias> | echo | ouvrez la parenthèse <expressionalias> fermez la parenthèse | <expressionalias> <binaryoperator-operator> <expressionalias> | racine de <expressionalias> | bravo | <expressionalias> au carré | uniform | xray;

<gt11lt19> = onze | <gt12lt19>;

<safedigit> = sept | cinq | trois | quatre | neuf | deux | six | huit;

<numbers> = <lt999999> | <gt999999> [<lt999999>];

<expressionalias> = <expression>;

<gt999999> = <lt999> <powers> [<gt999999>];

<powers> = dÃ©cillion | milliard | sextillion | quintilliard | trillion | quintillion | dÃ©cilliard | septilliard | octillion | octilliard | million | trilliard | sextilliard | quadrillion | billion | septillion | nonilliard | nonillion | quadrilliard;

<unaryoperator-operator> = moins;

<lt999> = [ [<safedigit>] cent ] <lt99>;

<number> = <lt999999> | zÃ©ro;

<gt12lt19> = quinze | quatorze | seize | douze | dix neuf | dix sept | treize | dix huit;

<lt999999> = [ [<lt999>] mille ] <lt999>;

<digit> = <safedigit> | un;

<safedozen> = trente | octante | nonante | cinquante | quarante | septante | vingt;

<binaryoperator-operator> = égal | puissance | sur | moins | fois | plus;

<lt99> = <digit> | soixante <gt12lt19> | quatre vingt un | <safedozen> <safedigit> | <gt11lt19> | quatre vingt <safedigit> | quatre vingt onze | soixante dix | quatre vingt dix | quatre vingt <gt12lt19> | quatre vingt | soixante et un | soixante <safedigit> | <safedozen> et un | soixante et onze;