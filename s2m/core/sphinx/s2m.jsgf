#JSGF V0;

grammar speech-to-math-v0;

public <expression> = <expressionalias> <binaryoperator-operator> <expressionalias> | uniform | xray | <number> | bravo | ouvrez la parenthèse <expressionalias> fermez la parenthèse | delta | entre parenthèse <expressionalias> | <expressionalias> au carré | echo | <unaryoperator-operator> <expressionalias> | charlie | alpha | zulu | yankee;

<lt99> = <safedozen> et un | <gt11lt19> | soixante <safedigit> | <safedozen> <safedigit> | soixante et un | soixante et onze | soixante <gt12lt19> | <digit> | quatre vingt onze | quatre vingt dix | soixante dix | quatre vingt <safedigit> | quatre vingt | quatre vingt un | quatre vingt <gt12lt19>;

<integers> = <gt999999> [<lt999999>] | <lt999999>;

<suite> = <integers> [<suite>];

<lt999999> = [ [<lt999>] mille ] <lt999>;

<gt11lt19> = <gt12lt19> | onze;

<decimal> = <comma> <suite>;

<gt12lt19> = douze | dix sept | dix neuf | quatorze | treize | seize | quinze | dix huit;

<lt999> = [ [<safedigit>] cent ] <lt99>;

<powers> = nonillion | million | trilliard | quintilliard | sextillion | quadrilliard | octillion | quadrillion | sextilliard | septilliard | nonilliard | décilliard | décillion | octilliard | trillion | milliard | quintillion | septillion | billion;

<binaryoperator-operator> = équivaut à | inférieur à | moins ou plus | intégrale | somme | de | supérieur à | égal | sur | environ égal à | moins | plus ou moins | rond | puissance | vectoriel | contient | plus | inclus dans | fois | différent de;

<number> = zéro | <lt999999>;

<numbers> = <integers> [<decimal>];

<safedigit> = cinq | huit | neuf | deux | sept | trois | six | quatre;

<unaryoperator-operator> = racine de | moins | valeur absolu de | racine cubique de | racine carré de;

<digit> = <safedigit> | un;

<safedozen> = trente | octante | cinquante | quarante | septante | vingt | nonante;

<expressionalias> = <expression>;

<gt999999> = <lt999> <powers> [<gt999999>];

<comma> = point | virgule;