#JSGF V0;

grammar speech-to-math-v0;

public <expression> = <unaryoperator-operator> <expressionalias> | zulu | xray | yankee | <expressionalias> au carré | charlie | <expressionalias> <binaryoperator-operator> <expressionalias> | bravo | delta | echo | <number> | uniform | entre parenthèse <expressionalias> | ouvrez la parenthèse <expressionalias> fermez la parenthèse | alpha;

<unaryoperator-operator> = moins | racine cubique de | valeur absolu de | racine carré de | racine de;

<powers> = décilliard | billion | quadrilliard | quadrillion | quintilliard | sextillion | nonilliard | sextilliard | septillion | septilliard | octilliard | nonillion | octillion | quintillion | trillion | million | trilliard | décillion | milliard;

<safedigit> = six | deux | sept | cinq | trois | neuf | quatre | huit;

<gt999999> = <lt999> <powers> [<gt999999>];

<gt12lt19> = quinze | dix huit | quatorze | dix sept | dix neuf | seize | treize | douze;

<decimal> = <comma> <suite>;

<lt99> = <safedozen> et un | quatre vingt un | soixante dix | soixante et un | soixante <safedigit> | quatre vingt dix | soixante <gt12lt19> | quatre vingt | <digit> | quatre vingt <safedigit> | <safedozen> <safedigit> | soixante et onze | quatre vingt <gt12lt19> | quatre vingt onze | <gt11lt19>;

<lt999999> = [ [<lt999>] mille ] <lt999>;

<binaryoperator-operator> = différent de | supérieur à | vectoriel | inclus dans | puissance | somme | contient | sur | égal | moins ou plus | intégrale | inférieur à | rond | équivaut à | environ égal à | plus | fois | plus ou moins | moins | de;

<gt11lt19> = onze | <gt12lt19>;

<lt999> = [ [<safedigit>] cent ] <lt99>;

<digit> = <safedigit> | un;

<numbers> = <integers> [<decimal>];

<integers> = <gt999999> [<lt999999>] | <lt999999>;

<expressionalias> = <expression>;

<suite> = <integers> [<suite>];

<safedozen> = nonante | quarante | cinquante | trente | octante | septante | vingt;

<comma> = point | virgule;

<number> = zéro | <lt999999>;