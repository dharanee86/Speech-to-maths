#JSGF V0;

grammar speech-to-math-v0;

public <expression> = entre parenthèse <expressionalias> | delta majuscule variante | phi majuscule variante | india | yankee | lambda majuscule | foxtrot | upsilon majuscule variante | gamma | xi majuscule | psi | phi | chi | zeta | pi majuscule variante | theta majuscule variante | omega majuscule | tau | omega majuscule variante | kilo | <number> | kappa | sigma variante | <unaryoperator-operator> <expressionalias> | lima | mu | gamma majuscule | theta variante | delta majuscule | victor | rho variante | phi majuscule | quebec | whiskey | <expressionalias> <binaryoperator-operator> <expressionalias> | lambda | nu | pi | golf | juliet | psi majuscule | uniform | echo | sigma | pi majuscule | gamma majuscule variante | theta | pi variante | iota | xi | alpha | sigma majuscule | beta | upsilon majuscule | bravo | mike | delta | phi variante | november | epsilon variante | oscar | alpha grec | ouvrez la parenthèse <expressionalias> fermez la parenthèse | papa | charlie | sierra | <expressionalias> au carré | zulu | theta majuscule | lambda majuscule variante | rho | eta | omega | epsilon | hotel | upsilon | psi majuscule variante | tango | delta grec | xray | romeo | xi majuscule variante | sigma majuscule variante;

<expressionalias> = <expression>;

<gt11lt19> = onze | <gt12lt19>;

<gt12lt19> = douze | dix huit | quinze | seize | dix neuf | treize | quatorze | dix sept;

<lt999> = [ [<safedigit>] cent ] <lt99>;

<number> = <lt999999> | zéro;

<safedigit> = six | deux | quatre | cinq | huit | sept | neuf | trois;

<safedozen> = vingt | trente | nonante | octante | septante | cinquante | quarante;

<gt999999> = <lt999> <powers> [<gt999999>];

<numbers> = <integers> [<decimal>];

<unaryoperator-operator> = moins | racine cubique de | racine de | valeur absolu de | racine carré de;

<digit> = <safedigit> | un;

<suite> = <integers> [<suite>];

<decimal> = <comma> <suite>;

<powers> = sextillion | trilliard | septillion | décillion | quadrilliard | sextilliard | quadrillion | décilliard | million | octillion | septilliard | trillion | billion | octilliard | nonilliard | quintilliard | quintillion | nonillion | milliard;

<comma> = point | virgule;

<lt99> = quatre vingt <gt12lt19> | quatre vingt dix | soixante et onze | soixante <gt12lt19> | <gt11lt19> | <safedozen> <safedigit> | quatre vingt un | quatre vingt <safedigit> | soixante dix | soixante <safedigit> | quatre vingt onze | <safedozen> et un | <digit> | soixante et un | quatre vingt;

<binaryoperator-operator> = supérieur à | rond | inclus dans | intégrale | moins | inférieur à | plus | puissance | fois | égal | contient | équivaut à | vectoriel | sur | environ égal à | moins ou plus | différent de | de | plus ou moins | somme;

<integers> = <lt999999> | <gt999999> [<lt999999>];

<lt999999> = [ [<lt999>] mille ] <lt999>;